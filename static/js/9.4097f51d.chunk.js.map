{"version":3,"sources":["components/JreSearch.js"],"names":["JreSearch","props","data","Object","entries","jreData","videos","value","push","sort","a","b","datePublished","state","dataSize","length","this","setState","SearchBar","Search","columns","dataField","text","formatter","cell","href","target","toLocaleString","moment","duration","asSeconds","sortFunc","order","rowA","rowB","aSeconds","bSeconds","className","keyField","search","searchProps","baseProps","onDataSizeChange","handleDataSizeChange","bind","React","Component"],"mappings":"6RAUMA,E,kDAEJ,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IADA,IAAIC,EAAO,GACX,MAAsBC,OAAOC,QAAQC,EAAQC,QAA7C,eAAsD,CAAC,IAA3CC,EAA0C,uBACpDL,EAAKM,KAAKD,GAJK,OAOjBL,EAAKO,MAAK,SAASC,EAAGC,GACpB,OAAOD,GAAKC,GAAKD,EAAEE,cAAgBD,EAAEC,eAAiB,EAAI,KAG5D,EAAKC,MAAQ,CACXX,KAAMA,EACNY,SAAUZ,EAAKa,QAbA,E,oEAiBiB,IAAbD,EAAY,EAAZA,SACrBE,KAAKC,SAAS,CACZH,SAAUA,M,+BAIJ,IAAD,OACCI,EAAcC,SAAdD,UACFE,EAAU,CACd,CACEC,UAAW,MACXC,KAAM,MACNC,UAAW,SAACC,GAAD,OAAU,uBAAGC,KAAMD,EAAME,OAAO,UAAtB,UACpB,CACDL,UAAW,OACXC,KAAM,OACNb,MAAM,GACL,CACDY,UAAW,gBACXC,KAAM,iBACNb,MAAM,GACL,CACDY,UAAW,iBACXC,KAAM,aACNb,MAAM,EACNc,UAAW,SAACC,GAAD,OAAWA,EAAKG,mBAC1B,CACDN,UAAW,WACXC,KAAM,WACNb,MAAM,EACNc,UAAW,SAACC,GAAD,OAAUI,IAAOC,SAASL,GAAMM,aAC3CC,SAAU,SAACrB,EAAGC,EAAGqB,EAAOX,EAAWY,EAAMC,GACvC,IAAMC,EAAWP,IAAOC,SAASnB,GAAGoB,YAC9BM,EAAWR,IAAOC,SAASlB,GAAGmB,YACpC,MAAc,QAAVE,EACKG,EAAWC,EAEbA,EAAWD,IAEnB,CACDd,UAAW,cACXC,KAAM,eACN,CACAD,UAAW,WACXC,KAAM,YACN,CACAD,UAAW,mBACXC,KAAM,kBACNb,MAAM,IAIV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK4B,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,SAAS,UACTpC,KAAOc,KAAKH,MAAMX,KAClBkB,QAAUA,EACVmB,QAAM,IAGJ,SAAAtC,GAAK,OACH,6BACE,kBAACiB,EAAejB,EAAMuC,aACtB,yCAAe,EAAK3B,MAAMC,UAC1B,6BACA,kBAAC,IAAD,iBACOb,EAAMwC,UADb,CAEEC,iBAAmB,EAAKC,qBAAqBC,KAAK,iB,GAzFhDC,IAAMC,WAsGf9C","file":"static/js/9.4097f51d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport jreData from '../data/jre.json';\r\nimport moment from 'moment';\r\n\r\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/table-props.html\r\nclass JreSearch extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let data = [];\r\n    for (let [, value] of Object.entries(jreData.videos)) {\r\n      data.push(value);\r\n    }\r\n\r\n    data.sort(function(a, b) {\r\n      return a && b && a.datePublished > b.datePublished ? -1 : 1;\r\n    });\r\n\r\n    this.state = {\r\n      data: data,\r\n      dataSize: data.length,\r\n    };\r\n  }\r\n\r\n  handleDataSizeChange({ dataSize }) {\r\n    this.setState({\r\n      dataSize: dataSize,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { SearchBar } = Search;\r\n    const columns = [\r\n      {\r\n        dataField: 'url',\r\n        text: 'Url',\r\n        formatter: (cell) => <a href={cell} target=\"_blank\">link</a>,\r\n      }, {\r\n        dataField: 'name',\r\n        text: 'Name',\r\n        sort: true,\r\n      }, {\r\n        dataField: 'datePublished',\r\n        text: 'Date Published',\r\n        sort: true,\r\n      }, {\r\n        dataField: 'watchViewCount',\r\n        text: 'View Count',\r\n        sort: true,\r\n        formatter: (cell) =>  cell.toLocaleString(),\r\n      }, {\r\n        dataField: 'duration',\r\n        text: 'Duration',\r\n        sort: true,\r\n        formatter: (cell) => moment.duration(cell).asSeconds(),\r\n        sortFunc: (a, b, order, dataField, rowA, rowB) => {\r\n          const aSeconds = moment.duration(a).asSeconds();\r\n          const bSeconds = moment.duration(b).asSeconds();\r\n          if (order === 'asc') {\r\n            return aSeconds - bSeconds;\r\n          }\r\n          return bSeconds - aSeconds;\r\n        }\r\n      }, {\r\n        dataField: 'description',\r\n        text: 'Description',\r\n      },{\r\n        dataField: 'keywords',\r\n        text: 'Keywords',\r\n      },{\r\n        dataField: 'isFamilyFriendly',\r\n        text: 'Family Friendly',\r\n        sort: true,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Container>\r\n        <Row className=\"m-3\">\r\n          <Col>\r\n            <ToolkitProvider\r\n              keyField=\"videoId\"\r\n              data={ this.state.data }\r\n              columns={ columns }\r\n              search\r\n            >\r\n              {\r\n                props => (\r\n                  <div>\r\n                    <SearchBar { ...props.searchProps } />\r\n                    <div>Results: {this.state.dataSize}</div>\r\n                    <hr />\r\n                    <BootstrapTable\r\n                      { ...props.baseProps }\r\n                      onDataSizeChange={ this.handleDataSizeChange.bind(this) }\r\n                    />\r\n                  </div>\r\n                )\r\n              }\r\n            </ToolkitProvider>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JreSearch;\r\n"],"sourceRoot":""}