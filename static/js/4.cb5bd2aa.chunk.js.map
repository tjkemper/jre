{"version":3,"sources":["components/JreSearch.js"],"names":["JreSearch","props","data","Object","entries","jreData","videos","value","push","sort","a","b","datePublished","state","dataSize","length","this","setState","SearchBar","Search","columns","dataField","text","formatter","cell","href","target","toLocaleString","keyField","search","searchProps","baseProps","onDataSizeChange","handleDataSizeChange","bind","React","Component"],"mappings":"6k+xGAMMA,E,YAEJ,WAAYC,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IADA,IAAIC,EAAO,GACX,MAAsBC,OAAOC,QAAQC,EAAQC,QAA7C,eAAsD,CAAC,IAAD,OAA1CC,EAA0C,oBACpDL,EAAKM,KAAKD,GAJK,OAOjBL,EAAKO,MAAK,SAASC,EAAGC,GACpB,OAAOD,GAAKC,GAAKD,EAAEE,cAAgBD,EAAEC,eAAiB,EAAI,KAG5D,EAAKC,MAAQ,CACXX,KAAMA,EACNY,SAAUZ,EAAKa,QAbA,E,qFAiBiB,IAAbD,EAAY,EAAZA,SACrBE,KAAKC,SAAS,CACZH,SAAUA,M,+BAIJ,IAAD,OACCI,EAAcC,SAAdD,UACFE,EAAU,CACd,CACEC,UAAW,MACXC,KAAM,MACNC,UAAW,SAACC,GAAD,OAAU,uBAAGC,KAAMD,EAAME,OAAO,UAAtB,UACpB,CACDL,UAAW,OACXC,KAAM,OACNb,MAAM,GACL,CACDY,UAAW,gBACXC,KAAM,iBACNb,MAAM,GACL,CACDY,UAAW,iBACXC,KAAM,aACNb,MAAM,EACNc,UAAW,SAACC,GAAD,OAAWA,EAAKG,mBAC1B,CACDN,UAAW,WACXC,KAAM,WACNb,MAAM,GACL,CACDY,UAAW,cACXC,KAAM,eACN,CACAD,UAAW,WACXC,KAAM,aAIV,OACE,kBAAC,IAAD,CACEM,SAAS,UACT1B,KAAOc,KAAKH,MAAMX,KAClBkB,QAAUA,EACVS,QAAM,IAGJ,SAAA5B,GAAK,OACH,6BACE,kBAACiB,EAAejB,EAAM6B,aACtB,yCAAe,EAAKjB,MAAMC,UAC1B,6BACA,kBAAC,IAAD,iBACOb,EAAM8B,UADb,CAEEC,iBAAmB,EAAKC,qBAAqBC,KAAK,c,GAzE1CC,IAAMC,WAmFfpC","file":"static/js/4.cb5bd2aa.chunk.js","sourcesContent":["import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport jreData from '../data/jre.json';\n\n// https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/table-props.html\nclass JreSearch extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let data = [];\n    for (let [, value] of Object.entries(jreData.videos)) {\n      data.push(value);\n    }\n\n    data.sort(function(a, b) {\n      return a && b && a.datePublished > b.datePublished ? -1 : 1;\n    });\n\n    this.state = {\n      data: data,\n      dataSize: data.length,\n    };\n  }\n\n  handleDataSizeChange({ dataSize }) {\n    this.setState({\n      dataSize: dataSize,\n    });\n  }\n\n  render() {\n    const { SearchBar } = Search;\n    const columns = [\n      {\n        dataField: 'url',\n        text: 'Url',\n        formatter: (cell) => <a href={cell} target=\"_blank\">link</a>,\n      }, {\n        dataField: 'name',\n        text: 'Name',\n        sort: true,\n      }, {\n        dataField: 'datePublished',\n        text: 'Date Published',\n        sort: true,\n      }, {\n        dataField: 'watchViewCount',\n        text: 'View Count',\n        sort: true,\n        formatter: (cell) =>  cell.toLocaleString(),\n      }, {\n        dataField: 'duration',\n        text: 'Duration',\n        sort: true,\n      }, {\n        dataField: 'description',\n        text: 'Description',\n      },{\n        dataField: 'keywords',\n        text: 'Keywords',\n      },\n    ];\n\n    return (\n      <ToolkitProvider\n        keyField=\"videoId\"\n        data={ this.state.data }\n        columns={ columns }\n        search\n      >\n        {\n          props => (\n            <div>\n              <SearchBar { ...props.searchProps } />\n              <div>Results: {this.state.dataSize}</div>\n              <hr />\n              <BootstrapTable \n                { ...props.baseProps }\n                onDataSizeChange={ this.handleDataSizeChange.bind(this) }\n              />\n            </div>\n          )\n        }\n      </ToolkitProvider>\n    );\n  }\n}\n\nexport default JreSearch;\n"],"sourceRoot":""}